(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{163:function(t,a,n){"use strict";n.r(a);var s=n(0),e=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"bank-account-namespace"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#bank-account-namespace","aria-hidden":"true"}},[t._v("#")]),t._v(" Bank Account Namespace")]),t._v(" "),n("p",[t._v("The bank account namespace allows you to mount bank account specific fields. This will generate a FramePay element at the location you desire within your form.")]),t._v(" "),n("h2",{attrs:{id:"rebilly-bankaccount-mount"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#rebilly-bankaccount-mount","aria-hidden":"true"}},[t._v("#")]),t._v(" Rebilly.bankAccount.mount")]),t._v(" "),n("p",[t._v("After Rebilly is initialized you can mount bank account elements into your form. This method requires two arguments, the first being a "),n("code",[t._v("selector")]),t._v(" and the second being an "),n("code",[t._v("element type")]),t._v(".")]),t._v(" "),n("p",[t._v("The first argument must be either a valid string DOM selector or an instance of a "),n("code",[t._v("jQuery")]),t._v(" or "),n("code",[t._v("Zepto")]),t._v(" object that wraps an element within the page. FramePay will attempt to resolve the element and generate a bank field within.")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// mount an account type element")]),t._v("\nRebilly"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("card"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("mount")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'#account-type'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'bankAccountType'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("The supported element types for the second argument are:")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("bankAccountType")]),t._v(", a set of inline buttons allowing the selection of the account type")]),t._v(" "),n("li",[n("code",[t._v("bankAccountNumber")]),t._v(", a simple element to enter the account number")]),t._v(" "),n("li",[n("code",[t._v("bankRoutingNumber")]),t._v(", a simple element to enter the routing number")])]),t._v(" "),n("p",[t._v("You must include mount one of each type into your form in order to create a token for a bank account.")]),t._v(" "),n("h4",{attrs:{id:"mounting-points"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mounting-points","aria-hidden":"true"}},[t._v("#")]),t._v(" Mounting Points")]),t._v(" "),n("p",[t._v("The mounting points within your form should be empty, their content will be replaced with the FramePay element.")]),t._v(" "),n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("form")]),t._v(" "),n("span",{attrs:{class:"token attr-name"}},[t._v("method")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("post"),n("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{attrs:{class:"token attr-name"}},[t._v("action")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("/process"),n("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),n("span",{attrs:{class:"token attr-name"}},[t._v("class")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("field"),n("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("label")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Account Type"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("label")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),n("span",{attrs:{class:"token attr-name"}},[t._v("id")]),n("span",{attrs:{class:"token attr-value"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("account-type"),n("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),n("span",{attrs:{class:"token comment"}},[t._v("\x3c!-- FramePay will inject the combined payment card field here --\x3e")]),t._v("\n        "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("button")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Continue"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("button")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token tag"}},[n("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("form")]),n("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])])}],!1,null,null,null);a.default=e.exports}}]);